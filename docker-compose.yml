services:
  db:
    image: postgres:16-alpine
    container_name: flexidb_postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: flexidb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d flexidb"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - flexidb_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: flexidb_app
    restart: always
    env_file: .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      db:
        condition: service_healthy
    networks:
      - flexidb_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flexidb.service=flexidb"
      - "traefik.http.services.flexidb.loadbalancer.server.port=3000"

  traefik:
    image: traefik:v2.10
    container_name: flexidb_traefik
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/traefik:/etc/traefik
    networks:
      - flexidb_network

networks:
  flexidb_network:
    driver: bridge

volumes:
  postgres_data: